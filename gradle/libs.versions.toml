[versions]
agp = "8.4.1"
buildconfig = "4.1.2"
compose = "1.6.11"
dokka = "1.9.20"
kmmbridge = "0.5.5"
kotlin = "2.0.0"
kotlinx-abi-plugin = "0.14.0"
kotlinx-datetime = "0.6.0"
kotlincompose = "2.0.0"
kotlininject = "0.7.1"
ksp = "2.0.0-1.0.22"
ktor = "2.3.11"
maven-publish = "0.27.0"
moshi = "1.15.1"
multiplatform-settings = "1.1.1"
serialization = "1.7.0"
skie = "0.8.2"
workflow = "1.12.1-beta09"

[libraries]
agp = { module = "com.android.tools.build:gradle", version.ref = "agp" }

androidx-activity-compose = { module = "androidx.activity:activity-compose", version = "1.8.0" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version = "1.6.1" }
androidx-core = { module = "androidx.core:core-ktx", version = "1.12.0" }
androidx-icons-extended = { module = "androidx.compose.material:material-icons-extended", version = "1.5.4" }
retainedactivity = { module = "dev.marcellogalhardo:retained-activity", version = "1.0.1" }

codepoints-deluxe = { module = "de.cketti.unicode:kotlin-codepoints-deluxe", version = "0.7.0" }
kamel = { module = "media.kamel:kamel-image", version = "0.9.4" }
multiplatform-settings = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatform-settings" }
multiplatform-settings-serialization = { module = "com.russhwolf:multiplatform-settings-serialization", version.ref = "multiplatform-settings" }
zoomable = { module = "me.saket.telephoto:zoomable", version = "0.6.2" }

apache-commons = { module = "org.apache.commons:commons-lang3", version = "3.13.0" }
slf4j-simple = { module = "org.slf4j:slf4j-simple", version = "2.0.9" }

kotlininject = { module = "me.tatarka.inject:kotlin-inject-runtime", version.ref = "kotlininject" }
kotlininject-compiler = { module = "me.tatarka.inject:kotlin-inject-compiler-ksp", version.ref = "kotlininject" }

kotlinpoet = { module = "com.squareup:kotlinpoet", version = "1.17.0" }
moshi = { module = "com.squareup.moshi:moshi", version.ref = "moshi" }
moshi-adapters = { module = "com.squareup.moshi:moshi-adapters", version.ref = "moshi" }
moshi-codegen = { module = "com.squareup.moshi:moshi-kotlin-codegen", version.ref = "moshi" }
okio = { module = "com.squareup.okio:okio", version = "3.9.0" }

kotlinx-abi = { module = "org.jetbrains.kotlinx:binary-compatibility-validator", version.ref = "kotlinx-abi-plugin" }
kotlinx-atomicfu = { module = "org.jetbrains.kotlinx:atomicfu", version = "0.24.0" }
kotlinx-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version = "1.8.1" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }
kotlinx-immutable = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version = "0.3.7" }
kotlinx-serialization-cbor = { module = "org.jetbrains.kotlinx:kotlinx-serialization-cbor", version.ref = "serialization" }
kotlinx-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "serialization" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }

ktor-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-contentnegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-js = { module = "io.ktor:ktor-client-js", version.ref = "ktor" }
ktor-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-serialization-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-websockets = { module = "io.ktor:ktor-client-websockets", version.ref = "ktor" }

dokka = { module = "org.jetbrains.dokka:dokka-gradle-plugin", version.ref = "dokka" }
maven-publish = { module = "com.vanniktech:gradle-maven-publish-plugin", version.ref = "maven-publish" }

workflow-core = { module = "com.squareup.workflow1:workflow-core", version.ref = "workflow" }
workflow-runtime = { module = "com.squareup.workflow1:workflow-runtime", version.ref = "workflow" }

bluesky = { module = "sh.christian.ozone:bluesky", version = "0.1.0" }
